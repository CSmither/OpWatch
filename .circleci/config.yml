version: 2.1

orbs:
  slack: circleci/slack@1.0.0

jobs: 
  check_circle_config:
    docker:
      - image: circleci/python
    working_directory: ~/opwatch/.circleci
    steps:
      - checkout:
          path: ~/opwatch
      - run: python check_config.py
      - run:
          name: Halt and commit when config changed
          command: |
              git config --global user.email "$GITHUB_EMAIL"
              git config --global user.name "$CIRCLE_USERNAME"
              git add config.yml
              git commit -m "Config Changed: Updating Circle build Config
                https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID
              "
              git push -q https://$GITHUB_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git $CIRCLE_BRANCH
              curl -X POST https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/$CIRCLE_BUILD_NUM/cancel?circle-token=$CIRCLE_TOKEN
          when: on_fail
    
  deploy:
    docker:
      - image: circleci/python
    steps:
      - slack/notify:
          message: "Deploying services"
      - add_ssh_keys:
          fingerprints:
            - "8a:1f:2c:bc:72:b9:ff:e8:a5:04:a1:1d:e6:67:e5:19"
      - run: ssh-keyscan -H smither.org >> ~/.ssh/known_hosts
      - run: ssh gameserv@smither.org "
                cd ~/games/minecraft/opwatch-develop/docker-compose &&
                git fetch && git reset --hard origin/develop &&
                docker-compose kill &&
                docker-compose rm -f &&
                docker-compose pull &&
                docker-compose -p opwatch_dev up -d "
      - slack/notify:
               message: "Services deployed on smither.org:8888 and smither.org:25570"
    
  notify_start:
    docker:
      - image: circleci/python
    steps:
      - slack/notify:
          message: "I am starting a build for $CIRCLE_PROJECT_REPONAME on branch $CIRCLE_BRANCH -> <https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID|WORKFLOW>"
          color: "#195F93"
  request_approval:
    docker:
      - image: circleci/python
    steps:
      - attach_workspace:
          at: ~/opwatch
      - slack/approval:
          message: "Hey, any chance of approval to release $(cat ~/opwatch/.version) on $CIRCLE_PROJECT_REPONAME?"
    
  server_build:
    docker:
      - image: circleci/openjdk:11-jdk-node-browsers
    working_directory: ~/opwatch/server
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout:
          path: ~/opwatch
      - run:
          name: Set Version
          working_directory: ~/opwatch
          command: perl -0777 -i.orig -pe "s/MANUAL_BUILD/$(cat .version)/igs" ./server/build.gradle build.gradle
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle build -x test
      - run: gradle bootJar
      - persist_to_workspace:
          root: ~/opwatch
          paths:
            - server/Dockerfile
            - server/build/libs
            - server/build/resources
            - .version
    
  server_docker_release:
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    environment:
      REGISTRY: smither/opwatch-server
    steps:
      - attach_workspace:
          at: ~/opwatch
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          working_directory: ~/opwatch/server
          command: docker build -t $REGISTRY:$CIRCLE_SHA1 .
      - run:
          name: Push docker image to docker hub
          command: |
            export VERSION=$(cat ~/opwatch/.version)
            [[ $CIRCLE_BRANCH = "master" ]] && RELEASE="stable" || RELEASE="testing"
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:$RELEASE-$VERSION
            docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:$RELEASE
            [[ $CIRCLE_BRANCH = "master" ]] && docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:latest
            docker push $REGISTRY:$CIRCLE_SHA1
            docker push $REGISTRY:$RELEASE-$VERSION
            docker push $REGISTRY:$RELEASE
      - slack/notify:
          message: "${CIRCLE_PROJECT_REPONAME} v$(cat ~/opwatch/.version) server released on docker hub"
  server_github_release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout:
          path: ~/opwatch
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            export VERSION=$(cat ~/opwatch/.version)
            echo $VERSION
            zip ./artifacts/server-$VERSION.zip ./artifacts/server ./artifacts/.version
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/*.zip
      - slack/notify:
          message: "${CIRCLE_PROJECT_REPONAME} v$(cat ~/opwatch/.version) released on github"
  server_test:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/opwatch/server
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout:
          path: ~/opwatch
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle check
      - store_artifacts:
          path: build/reports
          destination: build_reports
      - store_test_results:
          path: build/test-results
      - slack/status
  spigot_build:
    docker:
      - image: circleci/openjdk:11-jdk-node-browsers
    working_directory: ~/opwatch/spigot
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/opwatch
      - run:
          name: Set Version
          working_directory: ~/opwatch
          command: perl -0777 -i.orig -pe "s/MANUAL_BUILD/$(cat .version)/igs" ./spigot/build.gradle build.gradle
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle build -x test
      - run: gradle shadowJar
      - persist_to_workspace:
          root: ~/opwatch
          paths:
            - spigot/Dockerfile
            - spigot/build/libs
            - spigot/build/resources
    
  spigot_docker_release:
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    environment:
      REGISTRY: smither/opwatch-spigot
    steps:
      - attach_workspace:
          at: ~/opwatch
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          working_directory: ~/opwatch/spigot/docker
          command: docker build -t $REGISTRY:$CIRCLE_SHA1 .
      - run:
          name: Push docker image to docker hub
          command: |
            export VERSION=$(cat ~/opwatch/.version)
            [[ $CIRCLE_BRANCH = "master" ]] && RELEASE="stable" || RELEASE="testing"
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:$RELEASE-$VERSION
            docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:$RELEASE
            [[ $CIRCLE_BRANCH = "master" ]] && docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:latest
            docker push $REGISTRY:$CIRCLE_SHA1
            docker push $REGISTRY:$RELEASE-$VERSION
            docker push $REGISTRY:$RELEASE
      - slack/notify:
          message: "${CIRCLE_PROJECT_REPONAME} v$(cat ~/opwatch/.version) spigot released on docker hub"
  spigot_test:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/opwatch/spigot
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout:
          path: ~/opwatch
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle check
      - store_artifacts:
          path: build/reports
          destination: build_reports
      - store_test_results:
          path: build/test-results
      - slack/status
  

workflows: 
  opwatch:
    jobs:
      - check_circle_config
      - notify_start:
          requires:
            - check_circle_config
      - server_build:
          requires:
            - notify_start
      - server_test:
          requires:
            - server_build
      - spigot_build:
          requires:
            - notify_start
      - spigot_test:
          requires:
            - spigot_build
      - request_approval:
          requires:
            - server_test
            - spigot_test
          filters:
            branches:
              only:
                - develop
                - master
      - release_approval:
          type: approval
          requires:
            - request_approval
          filters:
            branches:
              only:
                - develop
                - master
      - server_docker_release:
          requires:
            - release_approval
          filters:
            branches:
              only:
                - develop
                - master
      - spigot_docker_release:
          requires:
            - release_approval
          filters:
            branches:
              only:
                - develop
                - master
      - deploy:
          requires:
            - server_docker_release
            - spigot_docker_release
          filters:
            branches:
              only:
                - develop
                - master
      - server_github_release:
          requires:
            - release_approval
          filters:
            branches:
              only: master
  
