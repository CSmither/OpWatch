version: 2
jobs:
  notify_start:
    docker:
      - image: circleci/python
    steps:
      - run: "curl -X POST http://smither.org:9184/connectChannel -H 'Content-Type: application/json' -d '{\"password\":\"$(echo $WEBIRC_PASSWORD)\", \"key\":\"(echo $DEV_CHANNEL_KEY)\", \"channel\":\"#dev\"}'"
      - run: "curl -X POST http://smither.org:9184/sendMsg -H 'Content-Type: application/json' -d '{\"password\":\"$(echo $WEBIRC_PASSWORD)\", \"channel\":\"#dev\", \"message\":\"Starting Build on CIRCLE_PROJECT_REPONAME/CIRCLE_BRANCH/CIRCLE_SHA1 -> https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID\"}'"
  request_approval:
    docker:
      - image: circleci/python
    steps:
      - run: "curl -X POST http://smither.org:9184/connectChannel -H 'Content-Type: application/json' -d '{\"password\":\"$(echo $WEBIRC_PASSWORD)\", \"key\":\"(echo $DEV_CHANNEL_KEY)\", \"channel\":\"#dev\"}'"
      - run: "curl -X POST http://smither.org:9184/sendMsg -H 'Content-Type: application/json' -d '{\"password\":\"$(echo $WEBIRC_PASSWORD)\", \"channel\":\"#dev\", \"message\":\"Requesting approval for a release on CIRCLE_PROJECT_REPONAME -> https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID\"}'"
  build_server:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/opwatch/server
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout:
          path: ~/opwatch
      - run:
          name: Set Version
          working_directory: ~/opwatch
          command: perl -0777 -i.orig -pe "s/MANUAL_BUILD/$(cat .version)/igs" ./server/build.gradle build.gradle
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle build
      - run: gradle bootJar
      - persist_to_workspace:
          root: ~/opwatch
          paths:
            - server/Dockerfile
            - server/build/libs
            - server/build/resources
            - .version
  test_server:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/opwatch/server
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout:
          path: ~/opwatch
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: gradle dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - run: gradle check
      - store_artifacts:
          path: build/reports
          destination: build_reports
      - store_test_results:
          path: build/test-results
  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - checkout:
          path: ~/opwatch
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(cat ~/opwatch/.version)
            echo $VERSION
            zip ./artifacts/server-$VERSION.zip ./artifacts/server ./artifacts/.version
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/*.zip
  docker-release:
    docker:
      - image: circleci/python:3.6.6-jessie-browsers
    environment:
      REGISTRY: smither/opwatch-server
      RELEASE: develop
    steps:
      - attach_workspace:
          at: ~/opwatch
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          working_directory: ~/opwatch/server
          command: docker build -t $REGISTRY:$CIRCLE_SHA1 .
      - run:
          name: Push docker image to docker hub
          command: |
            VERSION=$(cat ~/opwatch/.version)
            [[ $CIRCLE_BRANCH = "master" ]] && RELEASE="stable" || RELEASE="testing"
            docker login $DOCKER_USERNAME $DOCKER_PASSWORD
            docker tag $REGISTRY:$CIRCLE_SHA1 $REGISTRY:$RELEASE-$VERSION-SNAPSHOT
            docker push $REGISTRY:$RELEASE
            docker push $REGISTRY:$CIRCLE_SHA1

workflows:
  version: 2
  server:
    jobs:
      - notify_start
      - build_server
      - test_server:
          requires:
            - build_server
      - docker_release:
          requires:
            - test_server
          filters:
            branches:
              only:
                - develop
                - master
      - deploy_server:
          requires:
            - docker_release
          filters:
            branches:
              only:
                - develop
                - master
      - request_approval:
          requires:
            - test_server
          filters:
            branches:
              only: master
      - release-approval:
          type: approval
          requires:
            - request_approval
          filters:
            branches:
              only: master
      - publish-github-release:
          requires:
            - release-approval
          filters:
            branches:
              only: master
notify:
  webhooks:
    - url: https://host/webhook/